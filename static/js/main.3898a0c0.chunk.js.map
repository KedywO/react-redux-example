{"version":3,"sources":["todoStore.js","components/todoInput/TodoInput.js","components/todoList/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","todos","id","uuid","name","completed","state","createStore","type","payload","filter","todo","map","window","__REDUX_DEVTOOLS_EXTENSION__","TodoInput","useState","setTodo","dispatch","useDispatch","className","onSubmit","e","preventDefault","trim","addTodoAction","addTodo","onChange","target","value","placeholder","TodoList","todosState","useSelector","deleteTodo","todoId","deleteTodoAction","toggleTodo","completeTodoAction","console","log","checked","bind","onClick","App","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TAGMA,EAAe,CACjBC,MAAO,CACH,CACIC,GAAIC,MACJC,KAAM,iBACNC,WAAW,GAEf,CACIH,GAAIC,MACJC,KAAM,gBACNC,WAAW,KAmDVC,EAAQC,aA7CL,SAACD,EAAD,GAA6B,IAApBE,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAC3B,OAAQD,GACJ,IAAK,WACD,OAAO,2BACAF,GADP,IAEIL,MAAM,GAAD,mBAAMK,EAAML,OAAZ,CAAmBQ,MAEhC,IAAK,cACD,OAAO,2BACAH,GADP,IAEIL,MAAOK,EAAML,MAAMS,QAAO,SAAAC,GAAI,OAAKA,EAAKT,KAAOO,OAEvD,IAAK,gBACD,OAAO,2BACAH,GADP,IAEIL,MAAOK,EAAML,MAAMW,KAAI,SAAAD,GACnB,OAAGA,EAAKT,KAAOO,EACJ,2BAAIE,GAAX,IAAiBN,WAAYM,EAAKN,YACzBM,OAGzB,QACI,OAAOL,KAyBfN,EACAa,OAAOC,8BAAgCD,OAAOC,gC,QC3BnCC,G,MAlCG,WAAO,IAAD,EACIC,mBAAS,IADb,mBACbL,EADa,KACPM,EADO,KAEdC,EAAWC,cAkBjB,OACI,qBAAKC,UAAU,gBAAf,SACI,uBAAMC,SAjBG,SAAAC,GACbA,EAAEC,iBACkB,KAAhBZ,EAAKa,UAJG,SAAAb,GAAQO,EDsCC,SAAAP,GAAI,MAAK,CAClCH,KAAM,WACNC,QAASE,GCxCwBc,CAAcd,IAK3Ce,CAAQ,CACJxB,GAAGC,MACHC,KAAMO,EACNN,WAAW,IAEfY,EAAQ,MASJ,UACI,uBAAOT,KAAK,OACLmB,SARF,SAAAL,GACbL,EAAQK,EAAEM,OAAOC,QAQFC,YAAY,+BACZD,MAAOlB,IAEd,wBAAQH,KAAK,SAAb,2BCNDuB,G,MAvBE,WACb,IAAMC,EAAaC,aAAY,SAAA3B,GAAK,OAAIA,EAAML,SACxCiB,EAAWC,cAEXe,EAAa,SAAAC,GAAM,OAAIjB,EF2CD,SAAAiB,GAAM,MAAK,CACvC3B,KAAK,cACLC,QAAS0B,GE7C6BC,CAAiBD,KACjDE,EAAa,SAAAF,GAAM,OAAIjB,EF+CC,SAAAiB,GAAM,MAAK,CACzC3B,KAAK,gBACLC,QAAS0B,GEjD6BG,CAAmBH,KAEzD,OADAI,QAAQC,IAAIR,GAER,oBAAIZ,UAAU,eAAd,SACKY,EAAWpB,KAAI,SAAAD,GAAI,OAChB,qBAAIS,UAAU,YAAd,UACI,uBAAOZ,KAAK,WACLiC,QAAS9B,EAAKN,UACdsB,SAAUU,EAAWK,KAAK,KAAM/B,EAAKT,MAE5C,oBAAIkB,UAAWT,EAAKN,UAAY,YAAc,KAA9C,SAAqDM,EAAKP,OAC1D,sBAAMuC,QAAST,EAAWQ,KAAK,KAAM/B,EAAKT,IAA1C,iBAN2BS,EAAKT,WCGrC0C,MAXf,WACE,OACE,cAAC,IAAD,CAAUC,MAAOvC,EAAjB,SACE,sBAAKc,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCAO0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3898a0c0.chunk.js","sourcesContent":["import { createStore } from 'redux';\r\nimport uuid from 'react-uuid';\r\n\r\nconst initialState = {\r\n    todos: [\r\n        {\r\n            id: uuid(),\r\n            name: 'Zrób pranie',\r\n            completed: false\r\n        },\r\n        {\r\n            id: uuid(),\r\n            name: 'Umyj naczynia',\r\n            completed: false\r\n        }\r\n    ]\r\n};\r\n\r\n// REDUCER\r\nconst reducer = (state, {type, payload}) => {\r\n    switch (type){\r\n        case 'ADD_TODO':\r\n            return {\r\n                ...state,\r\n                todos: [...state.todos, payload]\r\n            };\r\n        case 'DELETE_TODO':\r\n            return {\r\n                ...state,\r\n                todos: state.todos.filter(todo => (todo.id !== payload))\r\n            };\r\n        case 'COMPLETE_TODO':\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map(todo => {\r\n                    if(todo.id === payload){\r\n                        return {...todo, completed: !todo.completed}\r\n                    }else return todo;\r\n                })\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// ACTIONS\r\n\r\nexport const addTodoAction = todo => ({\r\n    type: 'ADD_TODO',\r\n    payload: todo\r\n})\r\n\r\nexport const deleteTodoAction = todoId => ({\r\n    type:'DELETE_TODO',\r\n    payload: todoId\r\n})\r\n\r\nexport const completeTodoAction = todoId => ({\r\n    type:'COMPLETE_TODO',\r\n    payload: todoId\r\n})\r\n\r\n\r\n// STORE\r\nexport const state = createStore(\r\n    reducer,\r\n    initialState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\n","import React, { useState } from \"react\";\r\nimport './TodoInput.css';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodoAction } from \"../../todoStore\";\r\nimport uuid from 'react-uuid';\r\n\r\nconst TodoInput = () => {\r\n    const [todo, setTodo] = useState('');\r\n    const dispatch = useDispatch();\r\n    const addTodo = todo => dispatch(addTodoAction(todo));\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (todo.trim() === '') return;\r\n        addTodo({\r\n            id:uuid(),\r\n            name: todo,\r\n            completed: false\r\n        });\r\n        setTodo('');\r\n    }\r\n\r\n    const onChange = e => {\r\n        setTodo(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className='todoInputMain'>\r\n            <form onSubmit={onSubmit}>\r\n                <input type='text'\r\n                       onChange={onChange}\r\n                       placeholder='Dodaj coś do zrobienia!'\r\n                       value={todo}\r\n                />\r\n                <button type='submit'>Dodaj!</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoInput;","import React from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {deleteTodoAction, completeTodoAction} from \"../../todoStore\";\r\nimport './TodoList.css';\r\n\r\nconst TodoList = () => {\r\n    const todosState = useSelector(state => state.todos);\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteTodo = todoId => dispatch(deleteTodoAction(todoId));\r\n    const toggleTodo = todoId => dispatch(completeTodoAction(todoId));\r\n    console.log(todosState);\r\n    return (\r\n        <ul className='todolistMain'>\r\n            {todosState.map(todo => (\r\n                <li className='list-item' key={todo.id}>\r\n                    <input type='checkbox'\r\n                           checked={todo.completed}\r\n                           onChange={toggleTodo.bind(null, todo.id)}\r\n                    />\r\n                    <h3 className={todo.completed ? 'completed' : null}>{todo.name}</h3>\r\n                    <span onClick={deleteTodo.bind(null, todo.id)}>X</span>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import './App.css';\nimport { Provider } from 'react-redux';\nimport { state } from './todoStore';\nimport TodoInput from \"./components/todoInput/TodoInput\";\nimport TodoList from \"./components/todoList/TodoList\";\n\n\nfunction App() {\n  return (\n    <Provider store={state}>\n      <div className=\"App\">\n        <TodoInput />\n        <TodoList />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}